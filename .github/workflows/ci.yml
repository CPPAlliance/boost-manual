# Copyright 2023 Christian Mazakas
#
# Distributed under the Boost Software License, Version 1.0.
# (See accompanying file LICENSE_1_0.txt or copy at http://boost.org/LICENSE_1_0.txt)
---
name: CI

on:
  pull_request:
  push:
    branches:
      - master
      - develop
      - bugfix/**
      - feature/**
      - fix/**
      - pr/**

concurrency:
  group: ${{format('{0}:{1}', github.repository, github.ref)}}
  cancel-in-progress: true

env:
  NET_RETRY_COUNT: 5

jobs:
  posix:
    defaults:
      run:
        shell: bash

    strategy:
      fail-fast: false
      matrix:
        include:
          # Linux, gcc
          - { os: ubuntu-22.04, install: 'asciidoctor' }

    timeout-minutes: 180
    runs-on: ${{matrix.os}}
    container: ${{matrix.container}}

    steps:
      - name: Setup environment
        run: |
            if [ -f "/etc/debian_version" ]; then
                echo "DEBIAN_FRONTEND=noninteractive" >> $GITHUB_ENV
                export DEBIAN_FRONTEND=noninteractive
            fi
            if [ -n "${{matrix.container}}" ] && [ -f "/etc/debian_version" ]; then
                apt-get -o Acquire::Retries=$NET_RETRY_COUNT update
                apt-get -o Acquire::Retries=$NET_RETRY_COUNT install -y sudo software-properties-common
                # Need (newer) git, and the older Ubuntu container may require requesting the key manually using port 80
                apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys E1DD270288B4E6030699E45FA1715D88E1DF1F24
                for i in {1..${NET_RETRY_COUNT:-3}}; do sudo -E add-apt-repository -y ppa:git-core/ppa && break || sleep 10; done
                apt-get -o Acquire::Retries=$NET_RETRY_COUNT update
                apt-get -o Acquire::Retries=$NET_RETRY_COUNT install -y g++ python libpython-dev git
            fi

            git config --global pack.threads 0

      - uses: actions/checkout@v3
        with:
          # For coverage builds fetch the whole history, else only 1 commit using a 'fake ternary'
          fetch-depth: ${{ matrix.coverage && '0' || '1' }}

      - name: Install packages
        if: startsWith(matrix.os, 'ubuntu')
        run: |
            SOURCE_KEYS=(${{join(matrix.source_keys, ' ')}})
            SOURCES=(${{join(matrix.sources, ' ')}})
            # Add this by default
            SOURCES+=(ppa:ubuntu-toolchain-r/test)
            for key in "${SOURCE_KEYS[@]}"; do
                for i in {1..$NET_RETRY_COUNT}; do
                    wget -O - "$key" | sudo apt-key add - && break || sleep 10
                done
            done
            for source in "${SOURCES[@]}"; do
                for i in {1..$NET_RETRY_COUNT}; do
                    sudo add-apt-repository $source && break || sleep 10
                done
            done
            sudo apt-get -o Acquire::Retries=$NET_RETRY_COUNT update
            if [[ -z "${{matrix.install}}" ]]; then
                pkgs="${{matrix.compiler}}"
                pkgs="${pkgs/gcc-/g++-}"
            else
                pkgs="${{matrix.install}}"
            fi
            sudo apt-get -o Acquire::Retries=$NET_RETRY_COUNT install -y $pkgs

      - name: Setup Boost
        run: |
            # Handle also /refs/head/master
            if [ "$BOOST_CI_TARGET_BRANCH" == "master" ] || [[ "$BOOST_CI_TARGET_BRANCH" == */master ]]; then
                export BOOST_BRANCH="master"
            else
                export BOOST_BRANCH="develop"
            fi

            cd ..

            git clone -b $BOOST_BRANCH --depth 1 https://github.com/boostorg/boost.git boost-root
            cd boost-root
            git submodule update -q --init tools/boostdep libs/config
            python tools/boostdep/depinst/depinst.py config
            ./bootstrap.sh
            ./b2 -d0 headers

            echo 'using asciidoctor : "/usr/bin/asciidoctor" ;' > ~/user-config.jam

      - name: Run tests
        run: |
            cd ../boost-root
            ./b2 ${GITHUB_WORKSPACE}


